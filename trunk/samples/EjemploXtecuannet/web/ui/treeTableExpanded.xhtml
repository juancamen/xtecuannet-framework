<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.prime.com.tr/ui"
	template="../templates/ui.xhtml">
	
	<ui:define name="head">
		<style type="text/css">
			.pf-treetable {
				width:600px;
			}
		</style>
	</ui:define>

	<ui:define name="content">
		<h1 class="title ui-widget-header ui-corner-all">TreeTable - ReadOnly</h1>

		<div class="entry">
			<p>Setting expandable attribute to false will render treeTable in expanded and read-only format.</p>
			
			<h:form prependId="false">
	
				<h3>Default TreeTable</h3>
				<p:treeTable value="#{documentsController.root}" var="document" readOnly="true">
					<p:column>
						<f:facet name="header">
							Name
						</f:facet>
						<h:outputText value="#{document.name}" />
					</p:column>
					
					<p:column>
						<f:facet name="header">
							Size
						</f:facet>
						<h:outputText value="#{document.size}" />
					</p:column>
					
					<p:column>
						<f:facet name="header">
							Type
						</f:facet>
						<h:outputText value="#{document.type}" />
					</p:column>
					
				</p:treeTable>
				
			</h:form>
			
			

			<h3>Source</h3>
			<p:tabView>
				<p:tab title="treeTable.xhtml">
					<pre name="code" class="xml">
&lt;p:treeTable value="\#{documentsController.root}" var="document" readOnly="false"&gt;
	&lt;p:column&gt;
		&lt;f:facet name="header"&gt;
			Name
		&lt;/f:facet&gt;
		&lt;h:outputText value="\#{document.name}" /&gt;
	&lt;/p:column&gt;
	
	&lt;p:column&gt;
		&lt;f:facet name="header"&gt;
			Size
		&lt;/f:facet&gt;
		&lt;h:outputText value="\#{document.size}" /&gt;
	&lt;/p:column&gt;
	
	&lt;p:column&gt;
		&lt;f:facet name="header"&gt;
			Type
		&lt;/f:facet&gt;
		&lt;h:outputText value="\#{document.type}" /&gt;
	&lt;/p:column&gt;
&lt;/p:treeTable&gt;
					</pre> 
				</p:tab>
				
				<p:tab title="DocumentsController.java">
					<pre name="code" class="java">
public class DocumentsController implements Serializable {
	
	private static final Logger logger = Logger.getLogger(DocumentsController.class.getName());

	private TreeNode root;
	
	public DocumentsController() {
		root = new DefaultTreeNode("root", null);
		
		TreeNode documents = new DefaultTreeNode(new Document("Documents", "-", "Folder"), root);
		TreeNode pictures = new DefaultTreeNode(new Document("Pictures", "-", "Folder"), root);
		TreeNode music = new DefaultTreeNode(new Document("Music", "-", "Folder"), root);
		
		TreeNode work = new DefaultTreeNode(new Document("Work", "-", "Folder"), documents);
		TreeNode primefaces = new DefaultTreeNode(new Document("PrimeFaces", "-", "Folder"), documents);
		
		//Documents
		TreeNode expenses = new DefaultTreeNode("document", new Document("Expenses.doc", "30 KB", "Word Document"), work);
		TreeNode resume = new DefaultTreeNode("document", new Document("Resume.doc", "10 KB", "Word Document"), work);
		TreeNode refdoc = new DefaultTreeNode("document", new Document("RefDoc.pages", "40 KB", "Pages Document"), primefaces);
		
		//Pictures
		TreeNode barca = new DefaultTreeNode("picture", new Document("barcelona.jpg", "30 KB", "JPEG Image"), pictures);
		TreeNode primelogo = new DefaultTreeNode("picture", new Document("logo.jpg", "45 KB", "JPEG Image"), pictures);
		TreeNode optimus = new DefaultTreeNode("picture", new Document("optimusprime.png", "96 KB", "PNG Image"), pictures);
		
		//Music
		TreeNode turkish = new DefaultTreeNode(new Document("Turkish", "-", "Folder"), music);
		
		TreeNode cemKaraca = new DefaultTreeNode(new Document("Cem Karaca", "-", "Folder"), turkish);
		TreeNode erkinKoray = new DefaultTreeNode(new Document("Erkin Koray", "-", "Folder"), turkish);
		TreeNode mogollar = new DefaultTreeNode(new Document("Mogollar", "-", "Folder"), turkish);
		
		TreeNode nemalacak = new DefaultTreeNode("mp3", new Document("Nem Alacak Felek Benim", "1500 KB", "Audio File"), cemKaraca);
		TreeNode resimdeki = new DefaultTreeNode("mp3", new Document("Resimdeki Gozyaslari", "2400 KB", "Audio File"), cemKaraca);
		
		TreeNode copculer = new DefaultTreeNode("mp3", new Document("Copculer", "2351 KB", "Audio File"), erkinKoray);
		TreeNode oylebirgecer = new DefaultTreeNode("mp3", new Document("Oyle bir Gecer", "1794 KB", "Audio File"), erkinKoray);
		
		TreeNode toprakana = new DefaultTreeNode("mp3", new Document("Toprak Ana", "1536 KB", "Audio File"), mogollar);
		TreeNode bisiyapmali = new DefaultTreeNode("mp3", new Document("Bisi Yapmali", "2730 KB", "Audio File"), mogollar);
	}
	
	public TreeNode getRoot() {
		return root;
	}
}
					</pre>
				</p:tab>
			</p:tabView>
		</div>

	</ui:define>
</ui:composition>