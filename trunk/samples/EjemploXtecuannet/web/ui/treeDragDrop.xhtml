<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.prime.com.tr/ui"
	template="../templates/ui.xhtml">

	<ui:define name="content">
		<h1 class="title ui-widget-header ui-corner-all">Tree - DragDrop</h1>

		<div class="entry">
			<p>Tree has built-in support for dragdrop based relocation. Server side tree model is updated instantly to keep
            client side changes in sync. Optional dragdrop ajax behavior event can be used as a callback.</p>

			<h:form>

                <p:growl id="messages" showDetail="true"/>

                <p:tree id="treeDnd" value="#{treeBean.root}" var="node" dragdrop="true">
                    
                    <p:ajax event="dragdrop" listener="#{treeBean.onDragDrop}" update="messages" />
                    
					<p:treeNode>
						<h:outputText value="#{node}"/>
					</p:treeNode>
				</p:tree>
                
			</h:form>

			<h3>Source</h3>
			<p:tabView>
				<p:tab title="treeDragDrop.xhtml">
					<pre name="code" class="xml">
&lt;h:form&gt;

    &lt;p:growl id="messages" showDetail="true"/&gt;

    &lt;p:tree id="treeDnd" value="\#{treeBean.root}" var="node" dragdrop="true"&gt;

        &lt;p:ajax event="dragdrop" listener="\#{treeBean.onDragDrop}" update="messages" /&gt;

        &lt;p:treeNode&gt;
            &lt;h:outputText value="\#{node}"/&gt;
        &lt;/p:treeNode&gt;
    &lt;/p:tree&gt;

&lt;/h:form&gt;
					</pre>
				</p:tab>

				<p:tab title="TreeBean.java">
					<pre name="code" class="java">
package org.primefaces.examples.view;

import java.io.Serializable;

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import org.primefaces.event.DragDropEvent;

import org.primefaces.model.DefaultTreeNode;
import org.primefaces.model.TreeNode;

public class TreeBean implements Serializable {

	private TreeNode root;

	public TreeBean() {
		root = new DefaultTreeNode("Root", null);
		TreeNode node0 = new DefaultTreeNode("Node 0", root);
		TreeNode node1 = new DefaultTreeNode("Node 1", root);
		TreeNode node2 = new DefaultTreeNode("Node 2", root);

		TreeNode node00 = new DefaultTreeNode("Node 0.0", node0);
		TreeNode node01 = new DefaultTreeNode("Node 0.1", node0);

		TreeNode node10 = new DefaultTreeNode("Node 1.0", node1);
		TreeNode node11 = new DefaultTreeNode("Node 1.1", node1);

		TreeNode node000 = new DefaultTreeNode("Node 0.0.0", node00);
		TreeNode node001 = new DefaultTreeNode("Node 0.0.1", node00);
		TreeNode node010 = new DefaultTreeNode("Node 0.1.0", node01);

		TreeNode node100 = new DefaultTreeNode("Node 1.0.0", node10);
	}

	public TreeNode getRoot() {
		return root;
	}

    public void onDragDrop(DragDropEvent event) {
        TreeNode node = (TreeNode) event.getData();
		FacesMessage message = new FacesMessage(FacesMessage.SEVERITY_INFO, "DragDrop", node + " moved to " + node.getParent());

		FacesContext.getCurrentInstance().addMessage(null, message);
	}
}
					</pre>
				</p:tab>
			</p:tabView>
		</div>

	</ui:define>
</ui:composition>